version '1.0'


buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://xbib.org/repository"
        }
    }
    dependencies {
        classpath 'org.xbib.gradle.plugin:gradle-plugin-jflex:1.1.0'
    }
}

apply plugin: 'org.xbib.gradle.plugin.jflex'


jflex {
    source = project.file("language")
    generateDir = project.file("$project.buildDir/generated-src")
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'application'
    applicationDefaultJvmArgs = ["-Dgreeting.language=en"]

    repositories {
        mavenCentral()
        flatDir {
            dirs "$rootDir/lib"
        }
    }
    sourceSets {
        main {
            java {
                srcDirs = [
                        "$rootDir/build/generated-src",
                        "$rootDir/shell/src/main/java"
                ]
            }
        }
    }

    dependencies {
        compile name: 'java-cup-11b'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }


    run{
        standardInput = System.in
    }

}

task buildCUP() {
    group 'gaga'
    javaexec {
        main="-jar"
        args = [
                "lib/java-cup-11b.jar",
                "-destdir",
                "build/generated-src/",
                "-parser",
                "EmoticaParser",
                "language/emotica.cup"
        ]
    }
}

task packscanner(type: Copy) {
    group 'build'

        from "${buildDir}/generated-src/jflex/specification/EmoticaScanner.java",
                "${projectDir}/src/main/java/sym.java",
                "${projectDir}/src/main/jflex/specification/emotica.jflex",
                "${projectDir}/programs/helloworld.emo"


        into "${buildDir}/submissions/ffhs-fac-samuelblattner-scanner"

}
task zipscanner(type: Zip) {
    group 'build'

    mustRunAfter "packscanner"

    archiveName = "ffhs-fac-samuelblattner-scanner.zip"
    from file("${buildDir}/submissions/ffhs-fac-samuelblattner-scanner")
    destinationDir file("${buildDir}/submissions")

}



task packparser(type: Copy) {
    group 'build'

    from "${buildDir}/generated-src/EmoticaScanner.java",
            "${projectDir}/src/main/java/sym.java",
            "${projectDir}/src/main/java/parser.java",
            "${projectDir}/src/main/java/SyntaxChecker.java",
            "${projectDir}/src/main/jflex/specification/emotica.jflex",
            "${projectDir}/src/main/jflex/specification/emotica.cup",
            "${projectDir}/programs/helloworld.emo"


    into "${buildDir}/submissions/ffhs-fac-samuelblattner-parser"
}

task zipparser(type: Zip) {
    group 'build'

    mustRunAfter "packparser"

    archiveName = "ffhs-fac-samuelblattner-parser.zip"
    from file("${buildDir}/submissions/ffhs-fac-samuelblattner-parser")
    destinationDir file("${buildDir}/submissions")

}